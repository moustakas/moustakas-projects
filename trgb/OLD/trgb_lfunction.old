; jm00apr17ucb
; generate the luminosity function plots if specified
pro makeplots, objname, mags, smoothed, lin_response, log_response, $
               trgb_lin, trgb_log, postscript=postscript, oneplot=oneplot

        !x.ticklen=0.03
        p_thick = !p.thick & chars = !p.charsize
        charth = !p.charthick & xth = !x.thick & yth = !y.thick
        !p.thick = 2 & !p.charsize=0.8 & !p.charthick=1.5 & !x.thick=1.5 & !y.thick=1.5

        spawn, ['pwd'], datapath

        if keyword_set(oneplot) then begin
            
            if keyword_set(postscript) then begin
                ps_open, datapath[0]+'/'+objname+'_lfunction', /ps_fonts ;, /encapsulated
                device, xsize=10.5, ysize=8, yoffset=10.5, xoffset=0, /inches, /times
            endif else window, 3, xs=450, ys=450
            
            !p.multi=[0,2,2,0,1]

            plot, mags, smoothed, yrange = [0.9,max(smoothed)], $
              ytit = 'Number Density', $ ;ps=10, 
              xsty=3, ysty=3, $
;             xtickname=replicate(' ',6), $
              yminor=3, tit=strupcase(objname)+' Luminosity Function'
            plot, mags, lin_response, ytit = 'Linear Filter Response', $
              xtit = 'I magnitude', $
              xsty=3, ysty=3, yminor=2
            oplot, [!x.crange[0],!x.crange[1]], [0,0]
;            xyouts, [0.2,0.2], [0.85,0.85], 'TRGB='+strn(trgb_lin[0],format='(F5.2)')+' mag', $
;              /norm, charsize=1.5, charthick=1.8
            
            plot, mags, smoothed, yrange = [0.9,max(smoothed)], /ylog, $
              ytit = 'Number Density', $ ;ps=10, 
              xsty=3, ysty=3, $
;             xtickname=replicate(' ',6), $
              yminor=3, tit=strupcase(objname)+' Luminosity Function'
            plot, mags, log_response, ytit = 'Logarithmic Filter Response', $
              xtit = 'I magnitude', $
              xsty=3, ysty=3, yminor=2
            oplot, [!x.crange[0],!x.crange[1]], [0,0]
;            xyouts, [0.2,0.2], [0.85,0.85], 'TRGB='+strn(trgb_log[0],format='(F5.2)')+' mag', $
;              /norm, charsize=1.5, charthick=1.8

            !p.multi=0
            
            if keyword_set(postscript) then ps_close

        endif else begin

            if keyword_set(postscript) then begin
                ps_open, datapath[0]+'/'+objname+'_lintrgb', /ps_fonts ;, /encapsulated
                device, xsize=10.5, ysize=8, yoffset=10.5, xoffset=0, /inches, /times
            endif else window, 3, xs=450, ys=450
            
            plot, mags, smoothed, yrange = [0.9,max(smoothed)], $
              ytit = 'Number Density', $ ;ps=10, 
              xsty=3, ysty=3, $
              position=[0.16,0.4,0.96,0.92], $;xtickname=replicate(' ',6), $
              yminor=3, tit=strupcase(objname)+' Luminosity Function'
            plot, mags, lin_response, ytit = 'Linear Filter Response', /noerase, $
              xtit = 'I magnitude', position = [0.16,0.1,0.96,0.4], $
              xsty=3, ysty=3, yminor=2
            oplot, [!x.crange[0],!x.crange[1]], [0,0]
;            xyouts, [0.2,0.2], [0.85,0.85], 'TRGB='+strn(trgb_lin[0],format='(F5.2)')+' mag', $
;              /norm, charsize=1.5, charthick=1.8
            
            if keyword_set(postscript) then begin
                ps_close
                ps_open, datapath[0]+'/'+objname+'_logtrgb', /ps_fonts ;, /encapsulated
                device, xsize=10.5, ysize=8, yoffset=10.5, xoffset=0, /inches, /times
            endif else window, 1, xs=450, ys=450
            
            plot, mags, smoothed, yrange = [0.9,max(smoothed)], /ylog, $
              ytit = 'Number Density', $ ;ps=10, 
              xsty=3, ysty=3, $
              position=[0.16,0.4,0.96,0.92], $;xtickname=replicate(' ',6), $
              yminor=3, tit=strupcase(objname)+' Luminosity Function'
            plot, mags, log_response, ytit = 'Logarithmic Filter Response', /noerase, $
              xtit = 'I magnitude', position = [0.16,0.1,0.96,0.4], $
              xsty=3, ysty=3, yminor=2
            oplot, [!x.crange[0],!x.crange[1]], [0,0]
;            xyouts, [0.2,0.2], [0.85,0.85], 'TRGB='+strn(trgb_log[0],format='(F5.2)')+' mag', $
;              /norm, charsize=1.5, charthick=1.8
            
            if keyword_set(postscript) then ps_close 

        endelse
            
        !x.ticklen=0
        !p.thick = p_thick & !p.charsize=chars & !p.charthick=charth
        !x.thick = xth & !y.thick=yth

return
end


; jm00apr16ucb
pro trgb_lfunction, objname, data, trgb_lin, plotit=plotit, postscript=postscript, hst=hst

;	on_error, 2	; return to user
        npar = n_params()

;       readfast, objname+'_IVmags.dat', data, skip=2, ncols=8
;       if keyword_set(hst) then read_data, objname+'_starlist.dat', data, ncol=8 else $
        if keyword_set(hst) then read_data, objname+'_starlist.dat', data, ncol=5 else $
;         read_data, objname+'_IVmags.dat', data, ncol=8
          read_data, objname+'_IVmags.dat', data, ncol=5
;       if npar eq 1 then read_data, objname+'_IVmags.dat', data, ncol=5

        imags=data[*,3]
        ierr=data[*,4]

; generate a histogram

        hist = histogram(imags,bin=0.05,min=18.0)
        nhist = n_elements(hist)
        mags = findgen(nhist)/20.+18.	; 18 to 26.05

        smoothed=smooth2(hist,4)	; gaussian smoothing
;	smoothed=median(hist,21)
;	smoothed=gaus_convol(m,hist,0.1,nsigma=2.5)

; compute the mean error in each bin

        meanierr = fltarr(nhist)
        for i = 0L, nhist-1L do begin
            flag = where((imags ge mags[i]-0.05) and (imags le mags[i]+0.05),count)
            if count ne 0 then meanierr[i] = avg(ierr[flag]) else meanierr[i] = 0.
        endfor

; define the linear response function

        lin_response = fltarr(nhist)
        for j = 1L, nhist-2L do $
          lin_response[j] = smoothed[j+meanierr[j]]-smoothed[j-meanierr[j]]

; define the log response function

        log_response = fltarr(nhist)
        for k = 1L, nhist-2L do $
          log_response[k] = (alog10(smoothed[k+meanierr[k]])-alog10(smoothed[k-meanierr[k]]))*sqrt(smoothed[k])

; determine the TRGB from the maximum response

        trgb_lin = mags[where(lin_response eq max(lin_response))]
        trgb_log = mags[where(log_response eq max(log_response))]

; create luminosity function plots if specified

; create a "one-plot" keyword

        if keyword_set(plotit) then $
          makeplots, objname, mags, smoothed, lin_response, log_response, $
          trgb_lin, trgb_log, postscript=postscript, /oneplot

return
end
